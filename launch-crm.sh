#!/bin/bash

# D√©finir le r√©pertoire de base
CRM_DIR="/home/egx/Bureau/APPS/CRM"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ D√©marrage de l'application CRM...${NC}"

# Fonction pour arr√™ter tous les processus
cleanup() {
    echo -e "${YELLOW}üõë Arr√™t des processus...${NC}"
    pkill -f "ts-node" 2>/dev/null
    pkill -f "vite" 2>/dev/null
    pkill -f "node.*backend" 2>/dev/null
    exit 0
}

# Capturer Ctrl+C
trap cleanup SIGINT

# Aller dans le r√©pertoire CRM
cd "$CRM_DIR"

# V√©rifier si les d√©pendances sont install√©es
echo -e "${BLUE}üì¶ V√©rification des d√©pendances...${NC}"

# Backend
if [ ! -d "$CRM_DIR/backend/node_modules" ]; then
    echo -e "${YELLOW}üì¶ Installation des d√©pendances backend...${NC}"
    cd "$CRM_DIR/backend"
    npm install
    cd "$CRM_DIR"
fi

# Frontend
if [ ! -d "$CRM_DIR/frontend/node_modules" ]; then
    echo -e "${YELLOW}üì¶ Installation des d√©pendances frontend...${NC}"
    cd "$CRM_DIR/frontend"
    npm install
    cd "$CRM_DIR"
fi

# V√©rifier si le backend est d√©j√† en cours d'ex√©cution
if curl -s http://localhost:3003 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Backend d√©j√† en cours d'ex√©cution sur le port 3003${NC}"
    BACKEND_RUNNING=true
else
    echo -e "${GREEN}üîß D√©marrage du backend...${NC}"
    cd "$CRM_DIR/backend"
    npm run dev &
    BACKEND_PID=$!
    cd "$CRM_DIR"
    BACKEND_RUNNING=false
    
    # Attendre que le backend d√©marre
    echo -e "${BLUE}‚è≥ Attente du d√©marrage du backend...${NC}"
    sleep 5

    # V√©rifier si le backend est d√©marr√©
    if ! curl -s http://localhost:3003 > /dev/null; then
        echo -e "${YELLOW}‚è≥ Le backend prend plus de temps √† d√©marrer, attente suppl√©mentaire...${NC}"
        sleep 5
    fi
fi

# V√©rifier si le frontend est d√©j√† en cours d'ex√©cution
if curl -s http://localhost:3002 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Frontend d√©j√† en cours d'ex√©cution sur le port 3002${NC}"
    FRONTEND_RUNNING=true
else
    echo -e "${GREEN}üé® D√©marrage du frontend...${NC}"
    cd "$CRM_DIR/frontend"
    npm run dev &
    FRONTEND_PID=$!
    cd "$CRM_DIR"
    FRONTEND_RUNNING=false
    
    # Attendre que le frontend d√©marre
    echo -e "${BLUE}‚è≥ Attente du d√©marrage du frontend...${NC}"
    sleep 3
fi

# Ouvrir le navigateur
echo -e "${GREEN}üåê Ouverture du navigateur...${NC}"
sleep 2

# Essayer diff√©rents navigateurs
if command -v google-chrome &> /dev/null; then
    google-chrome http://localhost:3002 &
elif command -v firefox &> /dev/null; then
    firefox http://localhost:3002 &
elif command -v chromium-browser &> /dev/null; then
    chromium-browser http://localhost:3002 &
else
    xdg-open http://localhost:3002 &
fi

echo -e "${GREEN}‚úÖ Application CRM d√©marr√©e avec succ√®s!${NC}"
echo -e "${BLUE}üìä Backend: ${GREEN}http://localhost:3003${NC}"
echo -e "${BLUE}üé® Frontend: ${GREEN}http://localhost:3002${NC}"
echo ""
echo -e "${YELLOW}Appuyez sur Ctrl+C pour arr√™ter l'application${NC}"

# Si les services √©taient d√©j√† en cours d'ex√©cution, ne pas attendre
if [ "$BACKEND_RUNNING" = true ] && [ "$FRONTEND_RUNNING" = true ]; then
    echo -e "${BLUE}‚ÑπÔ∏è  Les services √©taient d√©j√† en cours d'ex√©cution. Appuyez sur Ctrl+C pour arr√™ter.${NC}"
    # Attendre ind√©finiment
    while true; do
        sleep 1
    done
else
    # Attendre que les processus se terminent
    wait
fi 